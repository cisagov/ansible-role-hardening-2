---
- name: Stat init.d/rc
  become: true
  ansible.builtin.stat:
    path: /etc/init.d/rc
  register: initdrc
  tags:
    - umask
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Set default rc umask
  become: true
  ansible.builtin.replace:
    regexp: umask(\s+.*)
    replace: umask {{ umask_value }}
    dest: /etc/init.d/rc
    mode: "0755"
  when: initdrc.stat.exists
  tags:
    - umask
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Ensure that a umask line appears in rc
  become: true
  lineinfile:
    line: umask {{ umask_value }}
    mode: "0644"
    path: /etc/init.d/rc
    regexp: umask(\s+.*)
  when: initdrc.stat.exists
  tags:
    - umask    

- name: Stat bashrc
  become: true
  ansible.builtin.stat:
    path: /etc/bashrc
  register: bashrc
  tags:
    - bash
    - umask
    - CCE-81036-6
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Set default bashrc umask
  become: true
  ansible.builtin.replace:
    regexp: umask(\s+.*)
    replace: umask {{ umask_value }}
    dest: /etc/bashrc
    mode: "0644"
  when: bashrc.stat.exists
  tags:
    - bash
    - umask
    - CCE-81036-6
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Ensure that a umask line appears in bashrc
  become: true
  lineinfile:
    line: umask {{ umask_value }}
    mode: "0644"
    path: /etc/bashrc
    regexp: umask(\s+.*)
  when: bashrc.stat.exists
  tags:
    - umask    

- name: Stat bash.bashrc
  become: true
  ansible.builtin.stat:
    path: /etc/bash.bashrc
  register: bash_bashrc
  tags:
    - bash
    - umask
    - CCE-81036-6
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Set default bash.bashrc umask
  become: true
  ansible.builtin.replace:
    regexp: umask(\s+.*)
    replace: umask {{ umask_value }}
    dest: /etc/bash.bashrc
    mode: "0644"
  when: bash_bashrc.stat.exists
  tags:
    - bash
    - umask
    - CCE-81036-6
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Ensure that a umask line appears in bash.bashrc
  become: true
  lineinfile:
    line: umask {{ umask_value }}
    mode: "0644"
    path: /etc/bash.bashrc
    regexp: umask(\s+.*)
  when: bash_bashrc.stat.exists
  tags:
    - umask    

- name: Stat csh.cshrc
  become: true
  ansible.builtin.stat:
    path: /etc/csh.cshrc
  register: cshrc
  tags:
    - csh
    - umask
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Set default csh.cshrc umask
  become: true
  ansible.builtin.replace:
    regexp: umask(\s+.*)
    replace: umask {{ umask_value }}
    dest: /etc/csh.cshrc
    mode: "0644"
  when: cshrc.stat.exists
  tags:
    - csh
    - umask
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Ensure that a umask line appears in csh.cshrc
  become: true
  lineinfile:
    line: umask {{ umask_value }}
    mode: "0644"
    path: /etc/csh.cshrc
    regexp: umask(\s+.*)
  when: cshrc.stat.exists
  tags:
    - umask    

- name: Set default profile umask
  become: true
  ansible.builtin.replace:
    regexp: umask(\s+.*)
    replace: umask {{ umask_value }}
    dest: /etc/profile
    mode: "0644"
  tags:
    - umask
    - CIS-UBUNTU2004-5.5.4
    - M1022

- name: Ensure that a umask line appears in profile
  become: true
  lineinfile:
    line: umask {{ umask_value }}
    mode: "0644"
    path: /etc/profile
    regexp: umask(\s+.*)
  tags:
    - umask

- name: Find all files in /etc/profile.d
  find:
    paths:
      - /etc/profile.d
    patterns:
      - "*"
  register: find_profiled_result

- name: set default profile umask for each file in /etc/profile.d
  become: true
  replace:
    regexp: umask(\s+.*)
    replace: umask {{ umask_value }}
    dest: "{{ item.path }}"
    mode: "0644"
  loop: "{{ find_profiled_result.files }}"
  loop_control:
    label: "{{ item.path }}"
  tags:
    - umask

- name: Ensure that a umask line appears in each file in /etc/profile.d
  become: true
  lineinfile:
    line: umask {{ umask_value }}
    mode: "0644"
    path: "{{ item.path }}"
    regexp: umask(\s+.*)
  loop: "{{ find_profiled_result.files }}"
  loop_control:
    label: "{{ item.path }}"
  tags:
    - umask    

- name: Set TMOUT in /etc/profile
  become: true
  block:
    - name: Configure readonly TMOUT
      lineinfile:
        line: "readonly TMOUT"
        dest: /etc/profile
        mode: "0644"
        state: present
        create: no
        insertbefore: "^export"

    - name: set TMOUT
      lineinfile:
        line: "TMOUT=900"
        dest: /etc/profile
        mode: "0644"
        state: present
        create: no
        insertbefore: "^readonly TMOUT"

    - name: export TMOUT
      lineinfile:
        line: "export TMOUT"
        dest: /etc/profile
        mode: "0644"
        state: present
        create: no
        insertafter: "^readonly TMOUT"


- name: Set TMOUT in bashrc
  become: true
  block:
    - name: readonly TMOUT
      lineinfile:
        line: "readonly TMOUT"
        dest: /etc/bashrc
        mode: "0644"
        state: present
        create: no
        insertbefore: "^export"

    - name: set TMOUT
      lineinfile:
        line: "TMOUT=900"
        dest: /etc/bashrc
        mode: "0644"
        state: present
        create: no
        insertbefore: "^readonly TMOUT"

    - name: export TMOUT
      lineinfile:
        line: "export TMOUT"
        dest: /etc/bashrc
        mode: "0644"
        state: present
        create: no
        insertafter: "^readonly TMOUT"
  when: bashrc.stat.exists

- name: Set TMOUT in bash.bashrc
  become: true
  block:
    - name: readonly TMOUT
      lineinfile:
        line: "readonly TMOUT"
        dest: /etc/bash.bashrc
        mode: "0644"
        state: present
        create: no
        insertbefore: "^export"

    - name: set TMOUT
      lineinfile:
        line: "TMOUT=900"
        dest: /etc/bash.bashrc
        mode: "0644"
        state: present
        create: no
        insertbefore: "^readonly TMOUT"

    - name: export TMOUT
      lineinfile:
        line: "export TMOUT"
        dest: /etc/bash.bashrc
        mode: "0644"
        state: present
        create: no
        insertafter: "^readonly TMOUT"
  when: bash_bashrc.stat.exists
  tags:
    - tmout

- name: Set TMOUT for each file in /etc/profile.d
  become: true
  block:
    - name: readonly TMOUT
      lineinfile:
        line: "readonly TMOUT"
        dest: "{{ item.path }}"
        mode: "0644"
        state: present
        create: no
        insertbefore: "^export"
      loop: "{{ find_profiled_result.files }}"
      loop_control:
        label: "{{ item.path }}"

    - name: set TMOUT
      lineinfile:
        line: "TMOUT=900"
        dest: "{{ item.path }}"
        mode: "0644"
        state: present
        create: no
        insertbefore: "^readonly TMOUT"
      loop: "{{ find_profiled_result.files }}"
      loop_control:
        label: "{{ item.path }}"

    - name: export TMOUT
      lineinfile:
        line: "export TMOUT"
        dest: "{{ item.path }}"
        mode: "0644"
        state: present
        create: no
        insertafter: "^readonly TMOUT"
      loop: "{{ find_profiled_result.files }}"
      loop_control:
        label: "{{ item.path }}"
  tags:
    - tmout
